# HostOS - Base Image
#
# Build steps:
# - `docker build -t dfinity/hostos-base:<tag> -f Dockerfile.base .`
# - `docker push/pull dfinity/hostos-base:<tag>`
# - `docker build -t dfinity/hostos-base-dev:<tag> --build-arg PACKAGE_FILES="packages.common packages.dev" -f Dockerfile.base .`
# - `docker push/pull dfinity/hostos-base-dev:<tag>`
#
# NOTE:
# If you edit this file, you will need to perform the following operations
# to get your changes deployed.
#
# 1. Get your MR approved and merged into master
# 2. On the next hourly master pipeline, click the "deploy-host-os-baseimg" job
# 3. Note down the sha256 and update the sha256 reference in the neighboring
#    Dockerfiles
#

#
# First build stage:
# - Download 3rd party tools
#
FROM ubuntu:24.04 AS download

USER root:root

ENV TZ=UTC
RUN ln -snf /usr/share/zoneinfo/$TZ /etc/localtime && echo $TZ > /etc/timezone
RUN apt-get -y update && apt-get -y upgrade && apt-get -y --no-install-recommends install \
    ca-certificates \
    curl \
    perl

# Download >=9.1 qemu and extra requirements
RUN cd /tmp/ && \
    curl -L -O http://mirrors.kernel.org/ubuntu/pool/main/n/nettle/libnettle8t64_3.10-1_amd64.deb && \
    curl -L -O http://mirrors.kernel.org/ubuntu/pool/main/n/nettle/libhogweed6t64_3.10-1_amd64.deb && \
    curl -L -O http://mirrors.kernel.org/debian/pool/main/b/brltty/libbrlapi0.8_6.7-1_amd64.deb && \
    curl -L -O http://mirrors.kernel.org/debian/pool/main/q/qemu/qemu-system-data_9.1.1+ds-2_all.deb && \
    curl -L -O http://mirrors.kernel.org/debian/pool/main/q/qemu/qemu-system-common_9.1.1+ds-2_amd64.deb && \
    curl -L -O http://mirrors.kernel.org/debian/pool/main/libj/libjpeg-turbo/libjpeg62-turbo_2.1.5-3+b1_amd64.deb && \
    curl -L -O http://mirrors.kernel.org/ubuntu/pool/main/g/gnutls28/libgnutls30t64_3.8.6-2ubuntu1_amd64.deb && \
    curl -L -O http://mirrors.kernel.org/debian/pool/main/q/qemu/qemu-system-x86_9.1.1+ds-2_amd64.deb && \
    echo "d86468a163e2792111d1550f8b5268e98bfb3aac8c5cac1ac838a17dfb0aadd6  libnettle8t64_3.10-1_amd64.deb" >> qemu.sha256 && \
    echo "69c77010697337baa9f1cb68310e8d6ba5494b89e85ef727cfed52dde46318ee  libhogweed6t64_3.10-1_amd64.deb" >> qemu.sha256 && \
    echo "c11049df22c2e201b62f3750d8c9cc99df5dead49872eca95b6a9ea3dde441df  libbrlapi0.8_6.7-1_amd64.deb" >> qemu.sha256 && \
    echo "57b6e526ac030bd4e74e4a12bd0ddf42460ac0559f33436796230f82a0bc45f2  qemu-system-data_9.1.1+ds-2_all.deb" >> qemu.sha256 && \
    echo "d665fcb4034912f89b9fe353385bc30171f442853fdddcb9cc3ccfffeed0557d  qemu-system-common_9.1.1+ds-2_amd64.deb" >> qemu.sha256 && \
    echo "c24ef7f380b7756dcfac054c3a7d1729a1b24ed659a62fe11cb4ae8793d0a31d  libjpeg62-turbo_2.1.5-3+b1_amd64.deb" >> qemu.sha256 && \
    echo "3180bdb96a896ce134b87ed2d47c484facc6cb419a6306d68e4cec7a5ff8c0ec  libgnutls30t64_3.8.6-2ubuntu1_amd64.deb" >> qemu.sha256 && \
    echo "423a54943da4fef0c7b28575f9e8180a0aa9038539027b7abf01c17ba5f56830  qemu-system-x86_9.1.1+ds-2_amd64.deb" >> qemu.sha256 && \
    shasum -c qemu.sha256

# Download >=6.11 kernel and modules
RUN cd /tmp/ && \
    curl -L -O http://mirrors.kernel.org/ubuntu/pool/main/l/linux/linux-modules-6.11.0-8-generic_6.11.0-8.8_amd64.deb && \
    curl -L -O http://mirrors.kernel.org/ubuntu/pool/main/l/linux/linux-modules-extra-6.11.0-8-generic_6.11.0-8.8_amd64.deb && \
    curl -L -O http://mirrors.kernel.org/ubuntu/pool/main/l/linux-signed/linux-image-6.11.0-8-generic_6.11.0-8.8_amd64.deb && \
    curl -L -O http://mirrors.kernel.org/ubuntu/pool/main/l/linux-meta/linux-image-generic-hwe-24.04_6.11.0-8.8_amd64.deb && \
    echo "d4cd2d97fcca81b57bec947b0e8ca004d556afce1d13f5cebe5d677c0445c6a2  linux-modules-6.11.0-8-generic_6.11.0-8.8_amd64.deb" >> kernel.sha256 && \
    echo "751be1cb9f911d84ac82d29889b956fb5c5b07c9f8ca7f74af0ff65ffbbed77c  linux-modules-extra-6.11.0-8-generic_6.11.0-8.8_amd64.deb" >> kernel.sha256 && \
    echo "241811191691c68e0874519ee71bda9de39e23510dee5e5512150db874f5b285  linux-image-6.11.0-8-generic_6.11.0-8.8_amd64.deb" >> kernel.sha256 && \
    echo "86b71d89cad0bb3e8c733d5fde9e96f293b8ba3d98ea42ddd47d5b53501e5b84  linux-image-generic-hwe-24.04_6.11.0-8.8_amd64.deb" >> kernel.sha256 && \
    shasum -c kernel.sha256

# Download and verify node_exporter
RUN cd /tmp/ && \
    curl -L -O https://github.com/prometheus/node_exporter/releases/download/v1.8.1/node_exporter-1.8.1.linux-amd64.tar.gz && \
    echo "fbadb376afa7c883f87f70795700a8a200f7fd45412532cc1938a24d41078011  node_exporter-1.8.1.linux-amd64.tar.gz" > node_exporter.sha256 && \
    shasum -c node_exporter.sha256


#
# Second build stage:
# - Download and cache minimal Ubuntu Server 20.04 LTS Docker image.
# - Install and cache upstream packages from built-in Ubuntu repositories.
# - Install compiled packages from the second stage.
#
FROM ubuntu:24.04

USER root:root

ARG CPU_SUPPORT
ENV SOURCE_DATE_EPOCH=0
ENV TZ=UTC
ENV DEBIAN_FRONTEND=noninteractive


# For the prod image, just use packages.common to define the packages installed
# on target.
# For the dev image, use both "packages.common" and "packages.dev" -- this can
# be set via docker build args (see above).
ARG PACKAGE_FILES=packages.common
RUN ln -snf /usr/share/zoneinfo/$TZ /etc/localtime && echo $TZ > /etc/timezone
COPY packages.* /tmp/
RUN apt-get -y update && \
    apt-get -y upgrade && \
    apt-get -y --no-install-recommends install $(for P in ${PACKAGE_FILES}; do cat /tmp/$P | sed -e "s/#.*//" ; done) && \
    rm /tmp/packages.*

# Install >=9.1 qemu and extra requirements
COPY --from=download /tmp/libnettle8t64_3.10-1_amd64.deb /tmp/libnettle8t64_3.10-1_amd64.deb
COPY --from=download /tmp/libhogweed6t64_3.10-1_amd64.deb /tmp/libhogweed6t64_3.10-1_amd64.deb
COPY --from=download /tmp/libbrlapi0.8_6.7-1_amd64.deb /tmp/libbrlapi0.8_6.7-1_amd64.deb
COPY --from=download /tmp/qemu-system-data_9.1.1+ds-2_all.deb /tmp/qemu-system-data_9.1.1+ds-2_all.deb
COPY --from=download /tmp/qemu-system-common_9.1.1+ds-2_amd64.deb /tmp/qemu-system-common_9.1.1+ds-2_amd64.deb
COPY --from=download /tmp/libjpeg62-turbo_2.1.5-3+b1_amd64.deb /tmp/libjpeg62-turbo_2.1.5-3+b1_amd64.deb
COPY --from=download /tmp/libgnutls30t64_3.8.6-2ubuntu1_amd64.deb /tmp/libgnutls30t64_3.8.6-2ubuntu1_amd64.deb
COPY --from=download /tmp/qemu-system-x86_9.1.1+ds-2_amd64.deb /tmp/qemu-system-x86_9.1.1+ds-2_amd64.deb

RUN apt-get install -y --no-install-recommends \
    /tmp/libnettle8t64_3.10-1_amd64.deb \
    /tmp/libhogweed6t64_3.10-1_amd64.deb \
    /tmp/libbrlapi0.8_6.7-1_amd64.deb \
    /tmp/qemu-system-data_9.1.1+ds-2_all.deb \
    /tmp/qemu-system-common_9.1.1+ds-2_amd64.deb \
    /tmp/libjpeg62-turbo_2.1.5-3+b1_amd64.deb \
    /tmp/libgnutls30t64_3.8.6-2ubuntu1_amd64.deb \
    /tmp/qemu-system-x86_9.1.1+ds-2_amd64.deb && \
    rm /tmp/libnettle8t64_3.10-1_amd64.deb && \
    rm /tmp/libhogweed6t64_3.10-1_amd64.deb && \
    rm /tmp/libbrlapi0.8_6.7-1_amd64.deb && \
    rm /tmp/qemu-system-data_9.1.1+ds-2_all.deb && \
    rm /tmp/qemu-system-common_9.1.1+ds-2_amd64.deb && \
    rm /tmp/libjpeg62-turbo_2.1.5-3+b1_amd64.deb && \
    rm /tmp/libgnutls30t64_3.8.6-2ubuntu1_amd64.deb && \
    rm /tmp/qemu-system-x86_9.1.1+ds-2_amd64.deb

# Install >=6.11 kernel
COPY --from=download /tmp/linux-modules-6.11.0-8-generic_6.11.0-8.8_amd64.deb /tmp/linux-modules-6.11.0-8-generic_6.11.0-8.8_amd64.deb
COPY --from=download /tmp/linux-modules-extra-6.11.0-8-generic_6.11.0-8.8_amd64.deb /tmp/linux-modules-extra-6.11.0-8-generic_6.11.0-8.8_amd64.deb
COPY --from=download /tmp/linux-image-6.11.0-8-generic_6.11.0-8.8_amd64.deb /tmp/linux-image-6.11.0-8-generic_6.11.0-8.8_amd64.deb
COPY --from=download /tmp/linux-image-generic-hwe-24.04_6.11.0-8.8_amd64.deb /tmp/linux-image-generic-hwe-24.04_6.11.0-8.8_amd64.deb

RUN apt-get install -y --no-install-recommends \
    /tmp/linux-modules-6.11.0-8-generic_6.11.0-8.8_amd64.deb \
    /tmp/linux-modules-extra-6.11.0-8-generic_6.11.0-8.8_amd64.deb \
    /tmp/linux-image-6.11.0-8-generic_6.11.0-8.8_amd64.deb \
    /tmp/linux-image-generic-hwe-24.04_6.11.0-8.8_amd64.deb && \
    rm /tmp/linux-modules-6.11.0-8-generic_6.11.0-8.8_amd64.deb && \
    rm /tmp/linux-modules-extra-6.11.0-8-generic_6.11.0-8.8_amd64.deb && \
    rm /tmp/linux-image-6.11.0-8-generic_6.11.0-8.8_amd64.deb && \
    rm /tmp/linux-image-generic-hwe-24.04_6.11.0-8.8_amd64.deb

# Install node_exporter
COPY --from=download /tmp/node_exporter-1.8.1.linux-amd64.tar.gz /tmp/node_exporter-1.8.1.linux-amd64.tar.gz
RUN cd /tmp/ && \
    mkdir -p /etc/node_exporter && \
    tar --strip-components=1 -C /usr/local/bin/ -zvxf node_exporter-1.8.1.linux-amd64.tar.gz node_exporter-1.8.1.linux-amd64/node_exporter && \
    rm /tmp/node_exporter-1.8.1.linux-amd64.tar.gz
